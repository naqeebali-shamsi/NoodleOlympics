package com.example.noodleolympics

import android.content.Intent
import android.media.MediaPlayer
import android.os.Bundle
import android.os.CountDownTimer
import android.view.Gravity
import android.view.View
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import androidx.constraintlayout.widget.ConstraintLayout
import org.json.JSONObject

class GameActivity : AppCompatActivity() {

    private lateinit var questionTextView: TextView
    private lateinit var timerTextView: TextView
    private lateinit var mediaPlayer: MediaPlayer
    private var questions = mutableListOf<String>()
    private var question: String? = null // Declare 'question' as a nullable mutable property

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_game)

        questionTextView = findViewById(R.id.questionTextView)
        timerTextView = findViewById(R.id.timerTextView)

        val response = intent.getStringExtra("response")
        print(response)
        val jsonResponse = response?.let { JSONObject(it) }
        val choices = jsonResponse?.getJSONArray("choices")
        val firstChoice = choices?.getJSONObject(0)
        val message = firstChoice?.getJSONObject("message")
        val content = message?.getString("content")
        val words = content?.let { JSONObject(it).getJSONArray("words") }

        val questionsList = intent.getStringArrayListExtra("questions")
        if (questionsList != null) {
            questions.addAll(questionsList) // Use this
        }
        print(questions)

        mediaPlayer = MediaPlayer.create(this, R.raw.times_up)

        if (questions.isNotEmpty()) {
            question = questions.random()
            questionTextView.text = question
        }

        startTimer()
    }

    private fun startTimer() {
        object : CountDownTimer(60000, 10) {
            override fun onTick(millisUntilFinished: Long) {
                val seconds = millisUntilFinished / 1000
                val milliseconds = (millisUntilFinished % 1000) / 10
                timerTextView.text = String.format("%02d:%02d", seconds, milliseconds)
            }

            override fun onFinish() {
                questionTextView.text = "TIMES UP"
                timerTextView.visibility = View.GONE
                questionTextView.layoutParams = ConstraintLayout.LayoutParams(ConstraintLayout.LayoutParams.MATCH_PARENT, ConstraintLayout.LayoutParams.MATCH_PARENT)
                questionTextView.gravity = Gravity.CENTER
                playSound()
                mediaPlayer.setOnCompletionListener {
                    if (question != null && questions.contains(question)) {
                        questions.remove(question) // remove current question from the list
                    }
                    val intent = Intent(this@GameActivity, EndGameActivity::class.java)
                    intent.putStringArrayListExtra("questions", ArrayList(questions))
                    startActivity(intent)
                }
            }


        }.start()

    }

    private fun playSound() {
        mediaPlayer.start()
    }

    override fun onDestroy() {
        super.onDestroy()
        if (::mediaPlayer.isInitialized) {
            mediaPlayer.release()
        }
    }


}
